/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Windows;

import com.okumura.proyectolibroclases.Alumno;
import com.okumura.proyectolibroclases.Asistencia;
import com.okumura.proyectolibroclases.Curso;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.*;
import javax.swing.table.*;

/**
 * Ventana que permite la Modificacion de las Variables Asistencia de todos los
 * Alumnos dentro del Curso.
 *
 * @author Okumura
 */
public class AsistenciaJFrameB extends JFrame {

    private static final long serialVersionUID = 1L;
    private Object[] columnNames = {"Nombre Alumnos/Dias de Clase", "Lunes", "Martes", "Miercoles", "Jueves", "Viernes"};
    private Object[][] Alumnos;
    private boolean[][] Asistencia = new boolean[4][5];
    private String[] sem = {"Semana 1", "Semana 2", "Semana 3", "Semana 4"};
    private DefaultTableModel model;
    private Curso curso;
    private int check = 0;

    /**
     * Creates new form AsistenciaJFrameB
     *
     * @param curso New editable Curso for Asistencia
     */
    public AsistenciaJFrameB(Curso curso) {
        this.curso = curso;
        getAsistencia();
        initComponents();
        activateComboBox();
        
        //Se agrega el Listener Para guardar cada cambio que se realize en la tabla
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveData();
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
		model = new DefaultTableModel(Alumnos, columnNames);
        jTable1 = new JTable(model) {

            private static final long serialVersionUID = 1L;

            /*@Override
            public Class getColumnClass(int column) {
            return getValueAt(0, column).getClass();
            }*/
            @Override
            public Class getColumnClass(int column) {
                switch (column) {
                    case 0:
                        return String.class;
                    case 1:
                        return Boolean.class;
                    case 2:
                        return Boolean.class;
                    case 3:
                        return Boolean.class;
                    default:
                        return Boolean.class;
                }
            }
        };
        jButton1 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Mes");
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 729, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(32, 32, 32)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(89, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        saveData();
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        showData();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        showData();
    }//GEN-LAST:event_jComboBox2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    /**
     * Metodo que carga los valores iniciales de Asistencia en un Array para el
     * Model que se asignara a la JTable
     */
    private void getAsistencia() {

        Alumnos = new Object[curso.getlistaAlumnos().size()][6];
        for (int i = 0; i < curso.getlistaAlumnos().size(); i++) {
            Alumnos[i][0] = curso.getlistaAlumnos().get(i).getNombre();
            Alumnos[i][1] = curso.getlistaAlumnos().get(i).getAsistencia().get(0).getAsistencia()[0][0];
            Alumnos[i][2] = curso.getlistaAlumnos().get(i).getAsistencia().get(0).getAsistencia()[0][1];
            Alumnos[i][3] = curso.getlistaAlumnos().get(i).getAsistencia().get(0).getAsistencia()[0][2];
            Alumnos[i][4] = curso.getlistaAlumnos().get(i).getAsistencia().get(0).getAsistencia()[0][3];
            Alumnos[i][5] = curso.getlistaAlumnos().get(i).getAsistencia().get(0).getAsistencia()[0][4];

        }
    }

    /**
     **Metodo que guarda todos los cambios realizados en la tabla (JTable)
     */
    public void saveData() {
        int mes = jComboBox1.getSelectedIndex();
        int semana = jComboBox2.getSelectedIndex();
        for (int i = 0; i < curso.getlistaAlumnos().size(); i++) {

            curso.getlistaAlumnos().get(i).getAsistencia().get(mes).setCell((boolean) jTable1.getValueAt(i, 1), semana, 0);
            curso.getlistaAlumnos().get(i).getAsistencia().get(mes).setCell((boolean) jTable1.getValueAt(i, 2), semana, 1);
            curso.getlistaAlumnos().get(i).getAsistencia().get(mes).setCell((boolean) jTable1.getValueAt(i, 3), semana, 2);
            curso.getlistaAlumnos().get(i).getAsistencia().get(mes).setCell((boolean) jTable1.getValueAt(i, 4), semana, 3);
            curso.getlistaAlumnos().get(i).getAsistencia().get(mes).setCell((boolean) jTable1.getValueAt(i, 5), semana, 4);

        }

    }
    
    /**
     * Metodo que actualiza los datos de la tabla(JTable) al realizar un cambio
     * en los ComboBox
     */
    public void showData() {
        int mes = jComboBox1.getSelectedIndex();
        int semana = jComboBox2.getSelectedIndex();
        if (semana < 0) {
            semana = 0;
        }
        Alumnos = new Object[curso.getlistaAlumnos().size()][6];
        for (int i = 0; i < curso.getlistaAlumnos().size(); i++) {
            Alumnos[i][0] = curso.getlistaAlumnos().get(i).getNombre();
            Alumnos[i][1] = curso.getlistaAlumnos().get(i).getAsistencia().get(mes).getAsistencia()[semana][0];
            Alumnos[i][2] = curso.getlistaAlumnos().get(i).getAsistencia().get(mes).getAsistencia()[semana][1];
            Alumnos[i][3] = curso.getlistaAlumnos().get(i).getAsistencia().get(mes).getAsistencia()[semana][2];
            Alumnos[i][4] = curso.getlistaAlumnos().get(i).getAsistencia().get(mes).getAsistencia()[semana][3];
            Alumnos[i][5] = curso.getlistaAlumnos().get(i).getAsistencia().get(mes).getAsistencia()[semana][4];

        }
        model = new DefaultTableModel(Alumnos, columnNames);
        jTable1.setModel(model);
    }
    /*
    *Metodo que Activa y rellena los ComboBox con sus respectivos datos
    */
    public void activateComboBox() {

        for (Object o : curso.getlistaAlumnos().get(0).getAsistencia()) {
            jComboBox1.addItem(((Asistencia) o).getMes());
        }
        for (String o : sem) {
            jComboBox2.addItem(o);
        }
        jComboBox1.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent arg0) {

                showData();

            }
        });

        jComboBox2.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent arg0) {

                showData();

            }
        });
    }
}

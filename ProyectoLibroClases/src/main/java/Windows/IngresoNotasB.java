/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Windows;

import com.okumura.proyectolibroclases.Alumno;
import com.okumura.proyectolibroclases.Asistencia;
import com.okumura.proyectolibroclases.Curso;
import com.okumura.proyectolibroclases.Notas;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.*;
import javax.swing.table.*;

/**
 **Clase que permite manejar las notas de cada Alumno dentro del curso en un
 * ramo especifico
 *
 * @author Okumura
 */
public class IngresoNotasB extends JFrame {

    private static final long serialVersionUID = 1L;
    private Object[] columnNames;
    private Object[][] Alumnos;
    private DefaultTableModel model;
    private List<Double> temp;
    private Curso curso;
    private int ramo;
    private int check = 0;

    /**
     * Creates new form AsistenciaJFrameB
     *
     * @param curso Clase Curso a editar notas
     * @param index Int que indica el index del ramo en el Array Notas
     */
    public IngresoNotasB(Curso curso, int index) {
        this.curso = curso;
        this.ramo = index;
        llenarModel();
        initComponents();
        adicionalStart();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new JTable(model) {

            private static final long serialVersionUID = 1L;

            /*@Override
            public Class getColumnClass(int column) {
            return getValueAt(0, column).getClass();
            }*/
            @Override
            public Class getColumnClass(int column) {
                switch (column) {
                    case 0:
                        return String.class;
                    case 1:
                        return Double.class;
                    case 2:
                        return Double.class;
                    case 3:
                        return Double.class;
                    default:
                        return Double.class;
                }
            }
        };
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(jTable1);

        jLabel1.setText("Asignatura:");

        jLabel2.setText("<<ramo>>");

        jLabel3.setText("Profesor:");

        jLabel4.setText("<<Profe>>");

        jButton2.setText("Cambiar Profesor");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Agregar Nota");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 804, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3)))))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jButton1)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        saveModel();
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        cambiarProfe();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        agregarNota();
        llenarModel();
        actualizarTabla();
    }//GEN-LAST:event_jButton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    /**
     **Metodo que Guarda todos los cambios realizados dentro de la Tabla.
     */
    private void saveModel() {
        for (int i = 0; i < curso.getlistaAlumnos().size(); i++) {
            temp = new ArrayList<>();
            for (int j = 1; j < curso.getlistaAlumnos().get(0).getNotas().get(ramo).getNotas().size() + 1; j++) {
                temp.add((Double) model.getValueAt(i, j));
            }
            curso.getlistaAlumnos().get(i).getNotas().get(ramo).setNotas(temp);
        }

    }

    /**
     * Metodo que LLena el Model con todos los datos del Ramo(index) para
     * inicalizar O Actualizar la tabla.
     */
    private void llenarModel() {
        Alumnos = new Object[curso.getlistaAlumnos().size()][curso.getlistaAlumnos().get(0).getNotas().get(ramo).getNotas().size() + 1];
        for (int i = 0; i < curso.getlistaAlumnos().size(); i++) {
            Alumnos[i][0] = curso.getlistaAlumnos().get(i).getNombre();
            for (int j = 1; j < curso.getlistaAlumnos().get(0).getNotas().get(ramo).getNotas().size() + 1; j++) {
                Alumnos[i][j] = curso.getlistaAlumnos().get(i).getNotas().get(ramo).getNotas().get(j - 1);
            }
        }
        columnNames = new Object[curso.getlistaAlumnos().get(0).getNotas().get(ramo).getNotas().size() + 1];
        columnNames[0] = "Nombre Alumnos";
        for (int i = 1; i < curso.getlistaAlumnos().get(0).getNotas().get(ramo).getNotas().size() + 1; i++) {
            columnNames[i] = "Nota " + (i);
        }

        model = new DefaultTableModel(Alumnos, columnNames);

    }

    /**
     **Metodo que permite cambiar el profesor guia del Ramo (index).
     */
    private void cambiarProfe() {
        String profe = JOptionPane.showInputDialog("Ingrese Nombre del Nuevo Profesor");
        curso.getProfesor().get(ramo).setNombre(profe);
        jLabel4.setText(curso.getProfesor().get(ramo).getNombre());
    }

    /**
     ** Metodo que permite agregar 1 Nota mas al Ramo(index).
     */
    private void agregarNota() {
        Double[] dou = new Double[curso.getlistaAlumnos().size()];
        for (int i = 0; i < curso.getlistaAlumnos().size(); i++) {
            curso.getlistaAlumnos().get(i).getNotas().get(ramo).addNota(1.0);
            dou[i] = 1.0;
        }
    }

    /**
     ** Metodo que ejecuta comandos adicionales para el inicio de la ventana.
     */
    private void adicionalStart() {
        jTable1.getColumnModel().getColumn(0).setMinWidth(200);
        jLabel2.setText(curso.getlistaAlumnos().get(0).getNotas().get(ramo).getAsignatura());
        jLabel4.setText(curso.getProfesor().get(ramo).getNombre());
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveModel();
            }
        });
    }

    /**
    ** Metodo que Actualiza la Tabla despues de algun cambio de datos.
    */
    private void actualizarTabla() {
        jTable1.setModel(model);
        model.fireTableDataChanged();
        jTable1.getColumnModel().getColumn(0).setMinWidth(200);
    }
}
